"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _core = require("@emotion/core");

var _mixins = require("../mixins");

var _variables = require("../variables");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var amount = '50px';
var size = '10px';
var ballBeat = (0, _core.keyframes)({
  '100%': {
    transform: 'rotate(-360deg)'
  },
  '25%': {
    transform: "translateX(".concat(amount, ") scale(0.5) rotate(-90deg)")
  },
  '50%': {
    transform: "translate(".concat(amount, ", ").concat(amount, ") rotate(-180deg)")
  },
  '75%': {
    transform: "translateY(".concat(amount, ") scale(0.5) rotate(-270deg)")
  }
});

var _default = function _default(color) {
  return {
    position: 'relative',
    transform: "translate(-".concat(parseInt(amount, 10) / 2, ", -").concat(parseInt(amount, 10) / 2, ")"),
    ' > div': _objectSpread({}, (0, _mixins.globalAnimation)(), {
      animation: "".concat(ballBeat, " 1.6s 0s infinite ease-in-out"),
      backgroundColor: color || _variables.PRIMARY_COLOR,
      height: size,
      left: '-5px',
      position: 'absolute',
      top: '-5px',
      width: size,
      '&:last-child': {
        animationDelay: '-0.8s'
      }
    })
  };
};

exports["default"] = _default;