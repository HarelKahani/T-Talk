"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _core = require("@emotion/core");

var _mixins = require("../mixins");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var riseAmount = '30px';
var ballPulseRise = (0, _core.keyframes)({
  '0%': {
    transform: 'scale(1.1)'
  },
  '100%': {
    transform: 'scale(1.0)'
  },
  '25%': {
    transform: "translateY(-".concat(riseAmount, ")")
  },
  '50%': {
    transform: 'scale(0.4)'
  },
  '75%': {
    transform: "translateY(".concat(riseAmount, ")")
  },
  '99%': {
    transform: 'translateY(0)'
  }
});

var _default = function _default(color) {
  return {
    ' > div': _objectSpread({}, (0, _mixins.balls)(color), {}, (0, _mixins.globalAnimation)(), {
      animationDelay: '0',
      animationDuration: '1s',
      animationIterationCount: 'infinite',
      animationTimingFunction: 'cubic-bezier(.15,.46,.9,.6)',
      display: 'inline-block',
      '&:nth-of-type(2n)': {
        animationName: ballPulseRise
      },
      '&:nth-of-type(2n-1)': {
        animationName: ballPulseRise
      }
    })
  };
};

exports["default"] = _default;