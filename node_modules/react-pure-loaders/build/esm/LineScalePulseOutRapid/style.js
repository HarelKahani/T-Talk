import _defineProperty from "@babel/runtime/helpers/defineProperty";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import { keyframes } from '@emotion/core';
import { globalAnimation, lines } from '../mixins';
var lineScalePulseOutRapid = keyframes({
  '0%': {
    transform: 'scaley(1.0)'
  },
  '80%': {
    transform: 'scaley(0.3)'
  },
  '90%': {
    transform: 'scaley(1.0)'
  }
});
export default (function (color) {
  return {
    ' > div': _objectSpread({}, lines(color), {}, globalAnimation(), {
      animation: "".concat(lineScalePulseOutRapid, " 0.9s -0.5s infinite cubic-bezier(.11,.49,.38,.78)"),
      display: 'inline-block',
      verticalAlign: 'middle',
      '&:nth-of-type(2), &:nth-of-type(4)': {
        animationDelay: '-0.25s !important'
      },
      '&:nth-of-type(1), &:nth-of-type(5)': {
        animationDelay: '0s !important'
      }
    })
  };
});