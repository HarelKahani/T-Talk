"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _core = require("@emotion/core");

var _mixins = require("../mixins");

var _utilities = _interopRequireDefault(require("../utilities"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var radius = '20px';
var lineSpinFade = (0, _core.keyframes)({
  '100%': {
    opacity: 1
  },
  '50%': {
    opacity: 0.3
  }
});

function lineSpinFadeLoader() {
  var n = 8;
  var i = 1;
  var grid = {};

  for (; i < 9; i += 1) {
    var quarter = parseInt(radius, 10) / 2 + parseInt(radius, 10) / 5.5;

    if (i === 1) {
      grid["> div:nth-of-type(".concat(i, ")")] = {
        animation: "".concat(lineSpinFade, " 1.2s ").concat((0, _utilities["default"])('0.12s', n, i), " infinite ease-in-out"),
        left: 0,
        top: radius
      };
    } else if (i === 2) {
      grid["> div:nth-of-type(".concat(i, ")")] = {
        animation: "".concat(lineSpinFade, " 1.2s ").concat((0, _utilities["default"])('0.12s', n, i), " infinite ease-in-out"),
        left: quarter,
        top: quarter,
        transform: 'rotate(-45deg)'
      };
    } else if (i === 3) {
      grid["> div:nth-of-type(".concat(i, ")")] = {
        animation: "".concat(lineSpinFade, " 1.2s ").concat((0, _utilities["default"])('0.12s', n, i), " infinite ease-in-out"),
        left: radius,
        top: 0,
        transform: 'rotate(90deg)'
      };
    } else if (i === 4) {
      grid["> div:nth-of-type(".concat(i, ")")] = {
        animation: "".concat(lineSpinFade, " 1.2s ").concat((0, _utilities["default"])('0.12s', n, i), " infinite ease-in-out"),
        left: quarter,
        top: "-".concat(quarter),
        transform: 'rotate(45deg)'
      };
    } else if (i === 5) {
      grid["> div:nth-of-type(".concat(i, ")")] = {
        animation: "".concat(lineSpinFade, " 1.2s ").concat((0, _utilities["default"])('0.12s', n, i), " infinite ease-in-out"),
        left: '0',
        top: "-".concat(radius)
      };
    } else if (i === 6) {
      grid["> div:nth-of-type(".concat(i, ")")] = {
        animation: "".concat(lineSpinFade, " 1.2s ").concat((0, _utilities["default"])('0.12s', n, i), " infinite ease-in-out"),
        left: "-".concat(quarter),
        top: "-".concat(quarter),
        transform: 'rotate(-45deg)'
      };
    } else if (i === 7) {
      grid["> div:nth-of-type(".concat(i, ")")] = {
        animation: "".concat(lineSpinFade, " 1.2s ").concat((0, _utilities["default"])('0.12s', n, i), " infinite ease-in-out"),
        left: "-".concat(radius),
        top: '0',
        transform: 'rotate(90deg)'
      };
    } else if (i === 8) {
      grid["> div:nth-of-type(".concat(i, ")")] = {
        animation: "".concat(lineSpinFade, " 1.2s ").concat((0, _utilities["default"])('0.12s', n, i), " infinite ease-in-out"),
        left: "-".concat(quarter),
        top: quarter,
        transform: 'rotate(45deg)'
      };
    }
  }

  return grid;
}

var _default = function _default(color) {
  return _objectSpread({}, lineSpinFadeLoader(), {
    left: '-4px',
    position: 'relative',
    top: '-10px',
    ' > div': _objectSpread({}, (0, _mixins.lines)(color), {}, (0, _mixins.globalAnimation)(), {
      height: '15px',
      position: 'absolute',
      width: '5px'
    })
  });
};

exports["default"] = _default;